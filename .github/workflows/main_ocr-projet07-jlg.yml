# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - OCR-projet07-JLG

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        working-directory: api
        run: pip install -r requirements.txt

      - name: Run model tests with Pytest
        working-directory: tests
        run: pytest -v test_model.py
        
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: mlflowjlg.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push MLflow Docker Image
        run: |
          docker build -t mlflowjlg.azurecr.io/mlflow-model:latest ./mlflow
          docker push mlflowjlg.azurecr.io/mlflow-model:latest

      - name: Build and Push API Docker Image
        run: |
          docker build -t mlflowjlg.azurecr.io/api:latest ./api
          docker push mlflowjlg.azurecr.io/api:latest

      - name: Build and Push GUI Docker Image
        run: |
          docker build -t mlflowjlg.azurecr.io/gui:latest ./gui
          docker push mlflowjlg.azurecr.io/gui:latest

      - name: Login to Azure
        uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS_APP }}
            enable-AzPSSession: false

      - name: Deploy MLflow to Azure Container Instances
        run: |
          az container create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name mlflow-container \
            --image mlflowjlg.azurecr.io/mlflow-model:latest \
            --cpu 1 \
            --memory 1.5 \
            --ports 5000 \
            --ip-address Public \
            --dns-name-label mlflowjlg-container \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --os-type Linux

      - name: Deploy API to Azure Container Instances
        run: |
          az container create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name api-container \
            --image mlflowjlg.azurecr.io/api:latest \
            --cpu 1 \
            --memory 1.5 \
            --ports 8501 \
            --ip-address Public \
            --dns-name-label api-container \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --os-type Linux

      - name: Deploy GUI to Azure Container Instances
        run: |
          az container create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name gui-container \
            --image mlflowjlg.azurecr.io/gui:latest \
            --cpu 1 \
            --memory 1.5 \
            --ports 8000 \
            --ip-address Public \
            --dns-name-label gui-container \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --os-type Linux

            
      - name: Run API tests 
        working-directory: tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/..
          pytest -v test_api.py
