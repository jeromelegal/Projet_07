# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - OCR-projet07-JLG

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read # Suppression de id-token: write (lié à OIDC)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        working-directory: fastapi
        run: pip install -r requirements.txt
        
      - name: Zip artifact for deployment
        working-directory: fastapi
        run: |
          zip -r release.zip ./*

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: fastapi/release.zip
        
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: mlflowjlg.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push MLflow Docker Image
        run: |
          docker build -t mlflowjlg.azurecr.io/mlflow-model:latest ./mlflow
          docker push mlflowjlg.azurecr.io/mlflow-model:latest

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy MLflow to Azure Container Instances
        run: |
          az container create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name mlflow-container \
            --image mlflowjlg.azurecr.io/mlflow-model:latest \
            --cpu 1 \
            --memory 1 \
            --ports 5000 \
            --dns-name-label mlflowjlg-container

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      contents: read # Suppression de id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_APP }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'OCR-projet07-JLG'
          slot-name: 'Production'
          package: release.zip
